[tool.poetry]
name = "anki-dynamic-fields"
version = "0.0.0"
description = ""
authors = ["kamoo1"]
license = "AGPLv3"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
jinja2 = "^3.1.3"
aqt = "^24.4.1"


[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
flake8 = "^7.0.0"
johnnydep = "^1.20.4"
ruff = "^0.4.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.semantic_release]
version_variables = ["ankiwordfreq/__init__.py:__version__"]
version_toml = ["pyproject.toml:tool.poetry.version"]
commit_message = "chore(release): {version} [skip ci]\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = false
tag_format = "v{version}"
build_command = "poetry install --sync && poetry run make"
[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = ["chore*", "ci*", "test*", "build*", "Merge*"]

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "jeeves <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
# GH_TOKEN is for action (docker) version, it's what passed inside the container
# GITHUB_TOKEN is what we have in CI env
env = "GITHUB_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/anki-dynamic-fields_*.ankiaddon"]
upload_to_vcs_release = true